{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js","webpack:///./src/js/libs/nanopop.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","push","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","length","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","hsvToHsl","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSV","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","numarize","array","invalid","type","exec","values","a","split","join","raw","alpha","substring","HSVaColor","that","toHSVA","toString","concat","toHSLA","toFixed","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","template","components","strings","useAsButton","inline","appClass","theme","hidden","palette","preview","hue","opacity","keys","interaction","input","save","cancel","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","this","swatchselect","change","init","disabled","comparison","closeOnScroll","swatches","sliders","default","defaultRepresentation","position","adjustableNumbers","showAlways","closeWithKey","includes","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","variant","isVertical","rb","eb","so","total","scrollTop","getScrollOffset","positions","vertical","variants","apply","bevs","vars","styleprop","adder","win","ch","rot","v2Ok","v1Ok","Nanopop","_root","button","app","requestAnimationFrame","cb","offsetParent","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","show","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","lastChild","insertBefore","nextSibling","parentNode","replaceChild","disable","transition","lastColor","hide","inst","cs","sh","opposite","picker","_color","_recalc","_updateOutput","cssRGBaString","background","currentColor","remove","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","toLowerCase","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","silent","event","args","_eventListener","callBacks","indexOf","splice","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","destroyAndRemove","recalc","string","utype","startsWith","click","getColor","getRoot","enable","utils","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Removes an attribute from a HTMLElement and returns the value.\r\n * @param el\r\n * @param name\r\n * @return {string}\r\n */\r\nexport function removeAttribute(el, name) {\r\n    const value = el.getAttribute(name);\r\n    el.removeAttribute(name);\r\n    return value;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a 'data-key' attribute will be saved in a object (which will be returned)\r\n * where the value of 'data-key' ist the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a 'data-con' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the 'data-arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\nexport function createFromTemplate(str) {\r\n\r\n    // Recursive function to resolve template\r\n    function resolve(element, base = {}) {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, 'data-con');\r\n        const key = removeAttribute(element, 'data-key');\r\n\r\n        // Check and save element\r\n        if (key) {\r\n            base[key] = element;\r\n        }\r\n\r\n        // Check all children\r\n        const subtree = con ? (base[con] = {}) : base;\r\n        for (let child of Array.from(element.children)) {\r\n\r\n            // Check if element should be saved as array\r\n            const arr = removeAttribute(child, 'data-arr');\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = [])).push(child);\r\n            } else {\r\n                resolve(child, subtree);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100;\n    m /= 100;\n    y /= 100;\n    k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSV(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)/i,\n        rgba: /^(rgb|rgba)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^(hsl|hsla)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^(hsv|hsva)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]+(\\d+)[\\D]*?([\\d.]+|$)/i,\n        hex: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(Number);\n\n    let match;\n    invalid: for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break invalid;\n\n                return {values: [...cmykToHsv(c, m, y, k), 1], type};\n            }\n            case 'rgba': {\n                let [, , r, g, b, a = 1] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1)\n                    break invalid;\n\n                return {values: [...rgbToHsv(r, g, b), a], type};\n            }\n            case 'hex': {\n                let [, hex] = match;\n\n                if (hex.length === 4 || hex.length === 3) {\n                    hex = hex.split('').map(v => v + v).join('');\n                }\n\n                if (hex.length === 6) {\n                    hex += 'ff';\n                }\n\n                let [raw, alpha] = [hex.substring(0, 6), hex.substring(6)];\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                alpha = parseInt(alpha, 16) / 255;\n                return {values: [...hexToHsv(raw), alpha], type};\n            }\n            case 'hsla': {\n                let [, , h, s, l, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1)\n                    break invalid;\n\n                return {values: [...hslToHsv(h, s, l), a], type};\n            }\n            case 'hsva': {\n                let [, , h, s, v, a = 1] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1)\n                    break invalid;\n\n                return {values: [h, s, v, a], type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v, that.a];\n            hsva.toString = () => `hsva(${that.h}, ${that.s}%, ${that.v}%, ${that.a})`;\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\n            hsla.toString = () => `hsla(${hsla[0]}, ${hsla[1]}%, ${hsla[2]}%, ${hsla[3].toFixed(1)})`;\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\n            rgba.toString = () => `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${rgba[3].toFixed(1)})`;\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            cmyk.toString = () => `cmyk(${cmyk[0]}%, ${cmyk[1]}%, ${cmyk[2]}%, ${cmyk[3]}%)`;\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            // Check if alpha channel make sense, convert it to 255 number space, convert\n            // to hex and pad it with zeros if needet.\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\n                .toString(16)\n                .toUpperCase().padStart(2, '0');\n\n            alpha && hex.push(alpha);\n            hex.toString = () => `#${hex.join('').toUpperCase() + alpha}`;\n            return hex;\n        },\n\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0\r\n        }, opt),\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            // Prevent default touch event\r\n            evt.preventDefault();\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options: {lock}, cache} = that;\r\n            const {element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) x = b.left;\r\n                else if (x > b.left + b.width) x = b.left + b.width;\r\n                if (y < b.top) y = b.top;\r\n                else if (y > b.top + b.height) y = b.top + b.height;\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            const cx = clamp(x / wrapper.offsetWidth);\r\n            const cy = clamp(y / wrapper.offsetHeight);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\r\n\r\n            if (that.options.lock === 'h') {\r\n                y = x;\r\n            }\r\n\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart} = that;\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    return that;\r\n}\r\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\n\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme}) => {\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\n\n    const root = _.createFromTemplate(`\n      <div data-key=\"root\" class=\"pickr\">\n\n        ${useAsButton ? '' : '<button type=\"button\" data-key=\"button\" class=\"pcr-button\"></button>'}\n\n        <div data-key=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''}>\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\n            <div data-con=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\n              <button type=\"button\" data-key=\"lastColor\" class=\"pcr-last-color\"></button>\n              <div data-key=\"currentColor\" class=\"pcr-current-color\"></div>\n            </div>\n\n            <div data-con=\"palette\" class=\"pcr-color-palette\">\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"palette\" class=\"pcr-palette\"></div>\n            </div>\n\n            <div data-con=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-hue pcr-slider\"></div>\n            </div>\n\n            <div data-con=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\n              <div data-key=\"picker\" class=\"pcr-picker\"></div>\n              <div data-key=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\n            </div>\n          </div>\n\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" data-key=\"swatches\"></div> \n\n          <div data-con=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\n            <input data-key=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\n\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"HEXA\" type=\"button\" ${hidden(c.interaction.hex)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"RGBA\" type=\"button\" ${hidden(c.interaction.rgba)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"HSLA\" type=\"button\" ${hidden(c.interaction.hsla)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"HSVA\" type=\"button\" ${hidden(c.interaction.hsva)}>\n            <input data-arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\n\n            <input data-key=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\n            <input data-key=\"cancel\" class=\"pcr-clear\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)}>\n            <input data-key=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\n          </div>\n        </div>\n      </div>\n    `);\n\n    const int = root.interaction;\n\n    // Select option which is not hidden\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\n\n    // Create method to find currenlty active option\n    int.type = () => int.options.find(e => e.classList.contains('active'));\n    return root;\n}\n","// Import utils\nimport * as _       from './utils/utils';\nimport {parseToHSV} from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        'swatchselect': [],\n        'change': [],\n        'save': [],\n        'init': []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, theme, sliders} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n\n        // Finalize build\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        this._nanopop = Nanopop({\n            reference: this._root.button,\n            el: this._root.app\n        });\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {button} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            // offsetParent of body is always 0. So check if it is the body\n            if (button.offsetParent === null && button !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const {parentElement} = opt.el;\n\n            if (parentElement.lastChild === opt.el) {\n                parentElement.appendChild(root.app);\n            } else {\n                parentElement.insertBefore(root.app, opt.el.nextSibling);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        }\n\n        // Call disable to also add the disabled class\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const [so, sh] = (() => {\n            const {sliders} = inst.options;\n            let so = 'v', sh = 'v';\n\n            if (sliders && sliders.match(/^[vh]+$/g)) {\n                if (sliders.length > 1) {\n                    [so, sh] = sliders;\n                } else {\n                    so = sh = sliders;\n                }\n            }\n\n            const opposite = {v: 'h', h: 'v'};\n            return [opposite[so], opposite[sh]];\n        })();\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onchange(x, y) {\n                    if (!cs.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n                        inst._updateOutput();\n\n                        // Calculate saturation based on the position\n                        _color.s = x * 100;\n\n                        // Calculate the value\n                        _color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        _color.v < 0 ? _color.v = 0 : 0;\n                    }\n\n                    // Set picker and gradient color\n                    const cssRGBaString = _color.toRGBA().toString();\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh,\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) return;\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        inst._color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so,\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) return;\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        inst._color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => this.setHSVA(...this._lastColor.toHSVA())),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                } else {\n                    return o;\n                }\n            });\n        }\n\n        if (!options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            this._nanopop.update(options.position);\n        }\n    }\n\n    _updateOutput() {\n\n        // Check if component is present\n        if (this._root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${this._root.interaction.type().getAttribute('data-type')}`;\n            this._root.interaction.result.value = typeof this._color[method] === 'function' ? this._color[method]().toString() : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive) {\n            this._emit('change', this._color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n        }\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = parseToHSV(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA()}\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {element} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(element);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        root.parentElement.removeChild(root);\n\n        // remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        this._root.app.classList.remove('visible');\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (this.options.disabled) return;\n        this._root.app.classList.add('visible');\n        this._rePositioningPicker();\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = parseToHSV(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type').startsWith(utype));\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            return this.setHSVA(...values, silent);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '1.0.1';\nexport default Pickr;\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\r\n\r\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\r\n        if (cached) return cached;\r\n        const [position, variant = 'middle'] = pos.split('-');\r\n        const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n        return cache[pos] = {\r\n            position,\r\n            variant,\r\n            isVertical\r\n        };\r\n    })();\r\n\r\n    const getScrollOffset = (el, total = 0) => {\r\n        while (el = el.parentElement) total += el.scrollTop;\r\n        return total;\r\n    };\r\n\r\n    return {\r\n        update(pos) {\r\n            const {position, variant, isVertical} = getInfo(pos);\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n            const so = getScrollOffset(el);\r\n\r\n            const positions = vertical => vertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding + so\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = vertical => vertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = `${v}px`;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            for (const rot of [isVertical, !isVertical]) {\r\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\r\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\r\n                if (v2Ok && v1Ok) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":""}